import ide;
import process;
import fsys;
import config;
import win.ui;
/*DSG{{*/
var winform = ..win.form(text="快手(AAuto Quicker) -  已生成EXE文件";right=545;bottom=221;max=false;parent=...)
winform.add(
btnClose={cls="button";text="关闭(ESC)";left=390;top=166;right=471;bottom=198;z=2};
btnExplorer={cls="button";text="打开发布目录(Enter)";left=239;top=166;right=381;bottom=198;z=1};
btnRun={cls="button";text="运行EXE文件(F5)";left=390;top=119;right=512;bottom=151;z=3};
chkBuildNumInc={cls="checkbox";text="版本号自增";left=323;top=88;right=438;bottom=102;z=8};
chkLostFocusClose={cls="checkbox";text="对话框失去焦点自动关闭";left=32;top=88;right=195;bottom=102;checked=1;z=6};
chkUpxCompress={cls="checkbox";text="UPX压缩EXE文件";left=203;top=88;right=314;bottom=102;z=7};
editCmdLine={cls="edit";left=108;top=121;right=381;bottom=149;edge=1;z=9};
editPublishPath={cls="edit";left=33;top=48;right=513;bottom=77;edge=1;readonly=1;z=4};
lbCmd={cls="static";text="启动参数：";left=31;top=125;right=101;bottom=151;align="right";transparent=1;z=10};
lbTitle={cls="static";text="已成功生成EXE文件";left=32;top=23;right=147;bottom=49;transparent=1;z=5}
)
/*}}*/

//避免窗口跑到IDE后面
win.setOwner(winform.hwnd,ide.getMainHwnd());

/*abortDialog{{*/
abortDialog = function(errCode){ 
var frmBuildWaring = ..win.form( text="快手(AAuto Quicker) 生成EXE失败 错误代码："+errCode;bottom=169;parent=ide.getMainHwnd();right=496;border="dialog frame";max=false;exmode="toolwindow";mode="popup" )
frmBuildWaring.add( 
btnHelp={ bottom=159;text="安全认证教程";left=117;top=124;z=2;right=237;cls="button" };
static={ bottom=127;right=488;left=12;top=23;transparent=1;z=1;text="生成EXE失败，
部份安全软件会阻止生成未知EXE，或对未知EXE错误报警。
请关闭文件监控类软件再试！

EXE文件生成以后，建议及时提交到主流安全厂商云查杀平台通过安全认证，
即可避免发生误报现象。";cls="static" };
btnBuild={ bottom=159;text="重新生成";left=247;top=124;z=3;right=367;cls="button" };
btnExt={ bottom=159;text="退出";left=377;top=124;z=4;right=478;cls="button" }
)


import web.util;
frmBuildWaring.btnHelp.oncommand = function(id,event){
	web.util.ieBrowser("http://www.aau.cn/thread-8299-1-1.html")
	frmBuildWaring.endModal()
}

import ide;
frmBuildWaring.btnBuild.oncommand = function(id,event){ 
	frmBuildWaring.endModal()
	::PostMessage( ide.getMainHwnd(),0x111/*_WM_COMMAND*/, 0x8317/*_IDE_ID_BUILD_PUBLISH*/,0);
}


frmBuildWaring.btnExt.oncommand = function(id,event){ 
	frmBuildWaring.endModal() 
}

frmBuildWaring.doModal()
}
/*}}*/ 

winform.chkLostFocusClose.checked = config.publish.chkLostFocusClose;
winform.chkUpxCompress.checked = config.publish.chkUpxCompress;
winform.chkBuildNumInc.checked = ( config.publish.chkBuildNumInc === null ) 
	? true : config.publish.chkBuildNumInc;

if( ide.projectIsOpened() ){
	fsys.delete( ..fsys.joinpath( ide.getPublisDir(), ide.getProjectProperty("name") + ".exe" )  );
	fsys.delete( ide.getPublishPath() )
}

var publishObj = ide.getPublishObjPath(); 

var loadLibraryEx = ::Kernel32.api( "LoadLibraryExA", "pointer(str file,pointer hFile,INT flash)");
var freeLibrary = ::Kernel32.api( "FreeLibrary", "bool(pointer hModule)");

var objDataFile;
try{
	objDataFile = loadLibraryEx(publishObj, ,2/*_LOAD_LIBRARY_AS_DATAFILE*/)
}
catch(e){ 
	abortDialog("30001"); 
}
if( !objDataFile ){
	return;
}

import fsys.res; 
var resLibs = {};
fsys.res.enum(
	function(module,resType,resName){
		table.push(resLibs,..string.lower(resName) ) 
		return true;
	},"LIB",objDataFile 
) 
freeLibrary(objDataFile);

/*Manifest{{*/
var manifestPath = ..fsys.joinpath( ide.getProjectDir(),".build\Manifest.xml" );
var manifestData = ..string.load( manifestPath ); 
if( (!manifestData) || ( ! ..string.find(manifestData,"supportedOS" ) ) ){
	import string.template;
	manifestTemplate = string.template();
	manifestTemplate.template = /***
<?xml version="1.0" encoding="UTF-8" standalone="yes"?> 
<assembly 
xmlns="urn:schemas-microsoft-com:asm.v1" 
manifestVersion="1.0">
<assemblyIdentity 
    processorArchitecture="x86" 
    version="5.1.0.0"
    type="win32"
    name="${EXENAME}"/>
    <description>${PROJENAME}</description>
    <dependency>
    <dependentAssembly>
    <assemblyIdentity
        type="win32"
        name="Microsoft.Windows.Common-Controls"
        version="6.0.0.0"
        publicKeyToken="6595b64144ccf1df"
        language="*"
        processorArchitecture="x86"/>
    </dependentAssembly>
    </dependency>
    <compatibility xmlns="urn:schemas-microsoft-com:compatibility.v1">
      <application>
          <!--The ID below indicates application support for Windows Vista -->
          <supportedOS Id="{e2011457-1546-43c5-a5fe-008deee3d3f0}"/>
          <!--The ID below indicates application support for Windows 7 -->
          <supportedOS Id="{35138b9a-5d96-4fbd-8e2d-a2440225f93a}"/>
		  <!--The ID below indicates application support for Windows 8 -->  
		  <supportedOS Id="{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}"/>
      </application>
    </compatibility>
    <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
    	<security>
        	<requestedPrivileges>
	    	<requestedExecutionLevel level="asInvoker" uiAccess="false" />
	    	<!-- 
	    	<requestedExecutionLevel  level="requireAdministrator" uiAccess="false" /> 
	    	-->
        	</requestedPrivileges>
    	</security>
	</trustInfo>
</assembly>
***/ 
	manifestData = manifestTemplate.format(
		EXENAME = ide.getPublishName();
		PROJENAME = ide.getProjectProperty("name")
	);
	manifestData = ..string.fromto(manifestData,0,65001);
	..fsys.createParentDir(manifestPath);
	string.save(manifestPath,manifestData )
}
var resFile = fsys.res.open( publishObj )
resFile.update(24,1,manifestData,0 ) 
resFile.close();
/*}}*/

 
var publishFile = ide.getPublishPath();
io.rename(publishObj,publishFile)
if(!io.exist(publishFile)){ 
	abortDialog("30002");
	return;
}

var publisDir = ide.getPublisDir();
for(k,resName in resLibs){
	var customBuild = fiber.create(
		function(resName){
			var libPath,libDir = io.libpath(resName);
			if(libDir && libPath && ..string.endWith(libPath,"_.aau",true) ){
				var builder = fsys.joinpath(libDir,".build\main.aau");
				if( io.exist( builder ) ){ 
					var tHnd = thread.create(builder)
					if(tHnd){
						thread.waitOne(tHnd);
						raw.closehandle(tHnd);
					}
				}
			}	
		}, publisDir /*使用工程目录下的用户库*/
	)
	fiber.resume (customBuild,resName);	
}
 
var builder = fsys.joinpath(ide.getProjectDir(),".build\main.aau");
if( io.exist( builder ) ){  
	var tHnd = thread.create(builder)
	if(tHnd){
		thread.waitOne(tHnd);
		raw.closehandle(tHnd);
	}
}
 
/*自增版本号{{*/
if( winform.chkBuildNumInc.checked ){

	import fsys.version;
	
	var fileVersion = ide.getProjectProperty("FileVersion"); 
	if( fileVersion ){
		var verInfo = fsys.version(fileVersion);
		
		verInfo.revision++;
		if( verInfo.revision >=  1000 ){
			verInfo.revision = 0;
			verInfo.build++;
		}
		if( verInfo.build >=  1000 ){
			verInfo.build = 0;
			verInfo.minor++;
		}
		if( verInfo.minor >=  100 ){
			verInfo.minor = 0;
			verInfo.major++;
		}
		ide.setProjectProperty("FileVersion",tostring(verInfo));
	}
	
	var productVersion = ide.getProjectProperty("ProductVersion");
	if(productVersion){
		var verInfo = fsys.version(productVersion);
		
		verInfo.revision++;
		if( verInfo.revision >=  1000 ){
			verInfo.revision = 0;
			verInfo.build++;
		}
		if( verInfo.build >=  1000 ){
			verInfo.build = 0;
			verInfo.minor++;
		}
		if( verInfo.minor >=  100 ){
			verInfo.minor = 0;
			verInfo.major++;
		}
		ide.setProjectProperty("ProductVersion",tostring(verInfo));
	}
} 

winform.editPublishPath.text = ide.getPublishPath();
winform.show();

ide.setConfig("project_CompanyName",ide.getProjectProperty("CompanyName") );
ide.setConfig("project_LegalCopyright",ide.getProjectProperty("LegalCopyright") )
/*}}*/

upxCompress = function(){
	if( winform.chkUpxCompress.checked ){
		winform.text = "快手(AAuto Quicker) -  正在使用UPX压缩EXE文件"
		winform.btnRun.disabled = true;
		win.invoke(
			function(publishFile){
				import ide.upx;
				ide.upx.compress(publishFile);
			},ide.getPublishPath()
		) 
		winform.btnRun.disabled = false;
		winform.text = "快手(AAuto Quicker) -  已生成EXE文件"
	}
}
upxCompress();
winform.chkUpxCompress.oncommand = function(id,event){
	upxCompress();
}

winform.btnClose.oncommand = function(id,event){
	winform.close()
}

var cmdStorePath = ..fsys.joinpath( ide.getProjectDir(),".build\cmdline.txt" );
winform.editCmdLine.text = string.load(cmdStorePath) : "";
winform.btnRun.oncommand = function(id,event){
	winform.btnRun.text = "请稍候..."
	winform.btnRun.disabled = true;
	process.execute(winform.editPublishPath.text,winform.editCmdLine.text);
	if(#winform.editCmdLine.text){
		string.save(cmdStorePath,winform.editCmdLine.text)
	}
	winform.close();
}
 
winform.btnExplorer.oncommand = function(id,event){
	winform.btnExplorer.text = "请稍候..."
	winform.btnExplorer.disabled = true;
	process.explore_select( winform.editPublishPath.text )
	winform.close();
}

winform.wndproc = function(hwnd,message,wParam,lParam){
	select( message ) { 
		case 0x1C/*_WM_ACTIVATEAPP*/ {
			if(!wParam){
				if( winform.chkLostFocusClose.checked ){
					winform.close();
				}
			}
		} 
		case 0x100/*_WM_KEYDOWN*/{
			if( wParam = 0x74/*_VK_F5*/ ){
				winform.btnRun.oncommand();
			}
		}
	} 
}

winform.onClose = function(hwnd,message,wParam,lParam){
    config.publish.chkLostFocusClose = winform.chkLostFocusClose.checked
    config.publish.chkUpxCompress = winform.chkUpxCompress.checked;
    config.publish.chkBuildNumInc = winform.chkBuildNumInc.checked;
}
 
win.loopMessage();
