//选项卡控件
/*
HTMLayout 选项卡控件使用教程
http://www.aau.cn/thread-8503-1-1.html  

左边栏选项卡
http://www.aau.cn/thread-8505-1-1.html
*/

import win.ui;
/*DSG{{*/
var winform = ..win.form( bottom=399;parent=...;text="HTMLayout 选项卡控件( tabs behavior应用 ）";right=599 )
winform.add(  )
/*}}*/

import web.layout;
import web.layout.behavior.tabs; //导入behavior
var wbLayout = web.layout(winform)

wbLayout.html = /**
<html>
<head><style>

.tabs 
{
  font:system;
  behavior:tabs; /*指定这是一个选项卡控件*/
  flow: horizontal; /*修改默认的垂直布局为横向布局,这样strip就跑左侧去了*/
  height:100%%;
  width:100%%;
  overflow:hidden;
}

.tabs > .strip /* 选项卡容器 */
{
  flow: vertical; /*选项卡按钮改成垂直布局*/
  margin-bottom:-1px;
  padding: 2px 0 2px 2px;
  width:60px; 
}

.tabs > .strip > [panel] /* 选项卡按钮默认样式 */
{
  padding: 3px 8px;
  margin-bottom:1px;
  height: 100%%;
  width:80px; 
  background-color:rgb(237,238,238);
}
.tabs > .strip > [panel]:hover /* 鼠标悬停选项卡样式*/
{
  background-color:rgb(223,236,249) rgb(223,236,249) rgb(201,256,221) rgb(201,256,221);
  transition:blend;
}
.tabs > .strip > [panel]:current  /*当前选项卡样式*/
{
  background-color:rgb(106,163,216) rgb(106,163,216) rgb(43,114,186) rgb(43,114,186); 
  padding: 4px 8px 5px 8px; 
  position:relative;
}
.tabs > .strip > [panel]:current:hover /*点击当前选项卡的样式*/
{
  background-image:url(theme:tab-item-selected);
  transition:none;
}

.tabs > .strip > [panel]:current:first-child,
.tabs > .strip > [panel]:current:hover:first-child
{
  background-image:url(theme:tab-item-leftmost-selected);
} 

.tabs:focus .strip [panel]:current 
{
  background-image:url(theme:tab-item-focused);
} 

.tabs > [name] { display:none; }

//框架页正在打开
.tabs > iframe[name]:busy { 
  foreground-image:url(images/loading.png);
  foreground-repeat: no-repeat;
  foreground-position: 2px 2px;
}

.tabs > [name]:expanded 
{ 
  background-image:url(theme:tab-panel);
  background-repeat:stretch;
  padding:7px;
  margin:2px;
  display:block; 
  height:100%%;
  width:100%%;//框架必须指定宽度
} 

//下面指定关闭按钮的样式
.tabs > .strip > [panel] .close-panel{
	display:none;
}
.tabs > .strip > [panel]:current .close-panel{ 
	display:block;  
	float:right;
	width:10px;
	height:10px;
	padding:1px;
	font-family:"Marlett"; 
	content:"r";
}
.tabs > .strip > [panel]:current .close-panel:hover{ 
    background:#999;
}
.tabs > .strip > [panel]:current .close-panel:active{ 
    background:red;
}

</style>
</head>

<body>
   <div class="tabs"  >
   
      <div class="strip" > 
        <!-- 选项卡,可以随意放到哪一侧,必须使用DIV标签 -->
         <div panel="panel1" selected>选项一</div>
         <div panel="panel2">选项二</div>
         <div panel="panel3">选项三</div>         
      </div>
      
      <div name="panel1"> 
          在超链接的URL前面加上tabs://的前缀,例如<br />
         <a href="tabs://http://bbs.aau.cn/index.php?mobile=1" title="选项卡教程" target="_blank">tabs://http://bbs.aau.cn/index.php?mobile=1</a> <br /><br />
          然后在超链接的 title属性中指定新建选项卡的标题,<br />
          最后指定用target属性指定目标选项卡的名字,"_blank"表示新建选项卡 <br /> 
          
          符合以上条件的超链接 - 点击则会在选项卡页面中打开,<br /><br />  
          这种动态创建的选项项，默认会添加一个关闭按钮, 注意这个按钮在CSS中要指定 float:right 以向右浮动
      </div> 
       <div name="panel2"> 
          这是第二个选项页,其中name属性指定选项卡名字 
          <button>按钮</button>
      </div>
      <div name="panel3"> 
          这是第三个选项页,其中name属性指定选项卡名字 
          <button #my-button>点这里</button>
      </div>  
   </div> 
</body>   
</html>   
**/

//切换选项页激活下面的事件
import win.util.tray;
wbLayout.onElementExpanded = {
    panel1  =  function (ltTarget,ltEle,reason) { 
        win.util.tray.pop( ltTarget.outerHTML );
    };
    panel2 =  function (ltTarget,ltEle,reason) { 
        win.util.tray.pop( ltTarget.outerHTML );
    };
    panel3 =  function (ltTarget,ltEle,reason) { 
        win.util.tray.pop( ltTarget.outerHTML );
    };
    /*
    HTMLayout的回调事件即可以是函数，也可以是一个函数表。
    函数表的键即节点的id或name属性,如果没有匹配名称的函数，则调用default函数
    */
    default = function(ltTarget,ltEle,reason){
    	win.util.tray.pop( ltTarget.name );
    };
}

winform.show() 
win.loopMessage();
