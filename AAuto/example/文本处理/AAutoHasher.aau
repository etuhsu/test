//计算文件MD5,SHA1,CRC32
//Author: lujjjh  
import win.ui;
/*DSG{{*/
var winform = ..win.form( acceptfiles=1;bottom=300;right=479;text="AAuto Hasher - 计算文件的MD5,SHA1,CRC32校验值" )
winform.add( 
progress={ dr=1;dl=1;bottom=293;max=100;right=472;left=8;min=0;font=LOGFONT( name='宋体' );z=1;db=1;top=283;edge=1;cls="progress" };
static={ bottom=21;right=336;left=13;dt=1;top=5;transparent=1;text="请从外部拖动文件到下面的文本框中:";z=3;cls="static" };
richedit={ dr=1;dl=1;vscroll=1;right=472;left=8;dt=1;db=1;cls="richedit";bottom=273;wrap=1;multiline=1;top=25;font=LOGFONT( name='宋体' );z=2;edge=1;readonly=1 }
)
/*}}*/

import crypt;
genHash = function ( szPath ) { 
 	
	var file,err =  io.open(szPath, "rbR");//R 随机优化
	if(!file) {
		winform.richedit.appendText( "打开文件失败:" , szPath , '\n',err , '\n' );
		return;
	}
 
 	bufsize = 0xA00000;
 	var buffer = raw.malloc( bufsize ); 
 	winform.progress.max = file.size( bufsize );
 	winform.progress.pos = 0;
	winform.progress.step = 1; 
	 
	var crc32;
	var md5 = crypt().createHashByMd5();
	var sha1 = crypt().createHashBySha1();
	 
	winform.richedit.appendText( "正在计算哈希值:" , szPath , '\n'); 
	while( 
	    var readSize;
	    readSize = file.readBuffer(buffer); //读文件
	    readSize
	) {
		md5.hashBuffer(buffer,readSize);
		sha1.hashBuffer(buffer,readSize); 
		crc32 = string.crc32(buffer,crc32,readSize);
		
		win.peekPumpMessage();
		winform.progress.stepIt();
	}  
	file.close();
	
	winform.richedit.appendText(
		'MD5:\t' , md5.getHexValue() , '\n',
		'SHA1:\t', sha1.getHexValue(), '\n',
		'CRC32:\t', ..string.format("%X",crc32 ), '\n',
		string.repeat(40, "-") , '\n'
	);
}

winform.wndproc = function(hwnd,message,wParam,lParam){
	select(message) {
		case 0x233/*_WM_DROPFILES*/ {
			var szPath = win.getDropFile(wParam);
			for (k,v in szPath) {
				winform.modifyStyleEx( 0x10/*_WS_EX_ACCEPTFILES*/,);    
				genHash( v );
				winform.modifyStyleEx( ,0x10/*_WS_EX_ACCEPTFILES*/);
			}
		}
	}
}

winform.show();
win.loopMessage();