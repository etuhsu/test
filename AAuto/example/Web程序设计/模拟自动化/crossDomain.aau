//跨域框架转为webform
import web.form.util;
/*DSG{{*/
var winform = win.form(parent=...; bottom=479;scroll=1;text="跨域控制框架页面";right=728 )
winform.add( 
btnCrossFrame={ dr=1;bottom=37;text="点这里演示跨域操作子框架";left=442;dt=1;top=6;z=1;right=673;cls="button" }
)
/*}}*/

//创建web窗体
var wb = web.form( winform ,0x40000/*_UIFLAG_THEME*/ ); 
winform.show(true)

var html = /**
<html>
<head> 
</head>
<body style="overflow:hide; margin:0px; "> 
<div  style=" margin:5px;font-size:9pt;">   
        下面的框架与父窗口分别位于不同域名下,默认无法跨域控制子框架<br />
        调用 web.form.util.crossDomain() 开启跨域支持,<br />
        所有web窗体函数即可自动支持跨域框架.
</div> 
        <iframe name="xDomainFrame" src="http://www.baidu.com" frameborder="0" scrolling="yes" height="100%" width="100%" noresize="noresize">
        </iframe>
</body>
</html>
**/ 
string.save("/xDomain.html", html)
wb.go("/xDomain.html")
wb.wait();


winform.btnCrossFrame.oncommand = function(id,event){

	//开启跨域
	web.form.util.crossDomain()
 	
	//遍历所有框架
	for(i=1;wb.document.frames.length ){ 
		var wbFrame = wb.getWebForm(i-1); //将框架转换为web.form对象
		wbFrame.body.innerHTML = "成功跨域,这是写入的内容" 
	} 
	
	//关闭跨域功能,非必需
	web.form.util.crossDomain(false)  
}



//进入消息循环
win.loopMessage();
return winform,wb;
